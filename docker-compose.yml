version: "3"
services:
  # Orion context broker
  orion:
    image: fiware/orion
    hostname: orion
    container_name: fiware-orion
    depends_on:
      - mongo-db
    networks:
      - soon
    expose:
      - "1026"
    ports:
      - "1026:1026"
    command: -dbhost mongo-db -logLevel DEBUG

  # IoT-Agent JSON
  iot-agent:
    image: fiware/iotagent-json
    hostname: iot-agent
    container_name: fiware-iot-agent
    depends_on:
      - mongo-db
      - mosquitto
    networks:
      - soon
    expose:
      - "4041"
    ports:
      - "4041:4041"
    environment:
      - IOTA_CB_HOST=orion # name of the context broker to update context
      - IOTA_CB_PORT=1026 # port the context broker listens on to update context
      - IOTA_NORTH_PORT=4041
      - IOTA_REGISTRY_TYPE=mongodb #Whether to hold IoT device info in memory or in a database
      - IOTA_TIMESTAMP=true # Supply timestamp information with each measurement
      - IOTA_CB_NGSI_VERSION=v2 # use NGSIv2 when sending updates for active attributes
      - IOTA_MONGO_HOST=mongo-db # The host name of MongoDB
      - IOTA_MONGO_PORT=27017 # The port mongoDB is listening on
      - IOTA_MONGO_DB=iotagent-json # The name of the database used in mongoDB
      - IOTA_MQTT_HOST=mosquitto # The host name of the MQTT Broker
      - IOTA_MQTT_PORT=1883 # The port the MQTT Broker is listening on to receive topics
      - IOTA_DEFAULT_RESOURCE= # Default is blank. I'm using MQTT so I don't need a resource
      - IOTA_PROVIDER_URL=http://iot-agent:4041
      - IOTA_DEFAULT_TRANSPORT=MQTT

  # Database FIWARE
  mongo-db:
    image: mongo:4.4.13
    hostname: mongo-db
    container_name: db-mongo
    expose:
      - "27017"
    ports:
      - "27017:27017"
    networks:
      - soon
    volumes:
      - mongo-db:/data
    

  # MQTT broker
  mosquitto:
    image: eclipse-mosquitto
    hostname: mosquitto
    container_name: mosquitto
    expose:
      - "1883"
      - "9001"
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    networks:
      - soon

  #Database for timeseries
  crate-db:
    image: crate:4.1.4
    hostname: crate-db
    container_name: db-crate
    ports:
        - "4200:4200" #admin UI
        - "4300:4300" #Transport protocol
    command: crate -Cauth.host_based.enabled=false -Ccluster.name=democluster -Chttp.cors.enabled=true -Chttp.cors.allow-origin="*"
    environment:
        - CRATE_HEAP_SIZE=2g
    volumes:
      - crate-db:/data
    networks:
      - soon
  
  # Quantum Leap is persisting Short Term History to Crate-DB
  quantumleap:
    image: smartsdk/quantumleap
    hostname: quantumleap
    container_name: fiware-quantumleap
    ports:
        - "8668:8668"
    depends_on:
        - crate-db
    environment:
        - CRATE_HOST=crate-db  #defines the location where the data will be persisted
    networks:
      - soon 

  #Dashboard for analytics
  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
        - crate-db
    ports:
        - "3000:3000"
    environment:
        - GF_INSTALL_PLUGINS=https://github.com/orchestracities/grafana-map-plugin/archive/master.zip;grafana-map-plugin,grafana-clock-panel,grafana-worldmap-panel
    volumes:
      - grafana:/var/lib/grafana
    networks:
      - soon 
  
  #Simulating real-world sensors
  sensors:
    image: gipi/python.v3 #Image able to run python
    container_name: sensors
    ports:
      - "22000:22"
    volumes:
      - /home/soporte/SOON/model:/home/soporte/data
    networks:
      - soon
  
  #Model
  model:
    image: gipi/python.v3 #Image able to run python
    container_name: model
    ports: 
      - "22001:22"
    volumes:
      - /home/soporte/SOON/model:/home/soporte/data
    networks:
      - soon

networks:
  soon:
    ipam:
      config:
        - subnet: 172.23.1.0/16

#These volumes persist even if a container is restarted or deleted, they are accessible by other containers. On the left the unique value of a volume on a host machine, on the right the path in the container.
volumes:
  mongo-db: ~ 
  crate-db: ~
  grafana: ~